<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eltweiyao.restaurant.dao.RecipeMapper">

    <resultMap id="recipeBean" type="com.eltweiyao.restaurant.dto.Recipe">
        <id column="pk_recipe" property="pkRecipe"/>
        <result column="recipe_name" property="recipeName"/>
        <result column="recipe_price" property="recipePrice"/>
        <result column="pk_category" property="pkCategory"/>
        <result column="category_name" property="categoryName"/>
        <result column="image_url" property="imageUrl"/>
        <collection property="materials" ofType="com.eltweiyao.restaurant.dto.Material">
            <id column="pk_material" property="pkMaterial"/>
            <result column="material_name" property="materialName"/>
            <result column="material_price" property="materialPrice"/>
            <result column="material_count" property="materialCount"/>
            <result column="pk_unit" property="pkUnit"/>
            <result column="unit_name" property="unitName"/>
        </collection>
    </resultMap>

    <insert id="saveRecipeMaterials">
        insert into recipe_related_material(pk_recipe,pk_material,material_count, pk_company)
        values
        <if test="materials != null and materials.size() > 0">
            <foreach collection="materials" item="material" separator=",">
                (#{pkRecipe}, #{material.pkMaterial}, #{material.materialCount}, #{pkCompany})
            </foreach>
        </if>
    </insert>
    <insert id="saveRecipeInfo">
        insert into recipe_programme(pk_recipe, pk_category, recipe_name, recipe_price, is_shelf, image_url, pk_company)
        values (#{recipe.pkRecipe}, #{recipe.pkCategory}, #{recipe.recipeName}, #{recipe.recipePrice}, '1', #{recipe.imageUrl}, #{pkCompany})
    </insert>
    <update id="updateRecipeInfo">
        update recipe_programme
        set recipe_name = #{recipeName}, recipe_price = #{recipePrice}, pk_category = #{pkCategory}, image_url = #{imageUrl}
        where pk_recipe = #{pkRecipe} and pk_company = #{pkCompany}
    </update>
    <update id="updateRecipeMaterial">
        update recipe_related_material
        set pk_material = #{pkMaterial}, material_count = #{materialCount}
        where pk_material = #{oldPkMaterial} and pk_recipe = #{pkRecipe} and pk_company = #{pkCompany}
    </update>
    <update id="updateRecipeMaterialCount">
        update recipe_related_material
        set material_count = (material_count + #{materialCount})
        where pk_material = #{pkMaterial} and pk_recipe = #{pkRecipe} and pk_company = #{pkCompany}
    </update>
    <delete id="deleteRecipeMaterial">
        delete from recipe_related_material
        where pk_recipe = #{pkRecipe} and pk_company = #{pkCompany}
        <if test="pkMaterial != '' and pkMaterial != null">
            and pk_material = #{pkMaterial}
        </if>
    </delete>
    <delete id="deleteRecipe">
        delete from recipe_programme
        where pk_recipe = #{pkRecipe} and pk_company = #{pkCompany}
    </delete>
    <select id="listRecipe" resultMap="recipeBean">
        SELECT
        rp.pk_recipe,
        rp.recipe_name,
        rp.recipe_price,
        rm.pk_material,
        mp.material_name,
        rm.material_count,
        mp.material_price,
        mp.pk_unit,
        mu.unit_name,
        rc.pk_category,
        rc.category_name,
        rp.image_url
        FROM
        recipe_programme rp
        INNER JOIN recipe_category rc ON rp.pk_category = rc.pk_category
        AND rp.pk_company = rc.pk_company
        LEFT JOIN recipe_related_material rm ON rp.pk_recipe = rm.pk_recipe
        AND rp.pk_company = rm.pk_company
        LEFT JOIN material_programme mp ON rm.pk_material = mp.pk_material
        AND rm.pk_company = mp.pk_company
        LEFT JOIN material_unit mu ON mp.pk_unit = mu.pk_unit
        AND mp.pk_company = mu.pk_company
        WHERE rp.pk_company = #{pkCompany}
        <if test="recipeName != '' and recipeName != null">
            <![CDATA[ AND instr(recipe_name, #{recipeName}) >0 ]]>
        </if>
        <if test="materialName != '' and materialName != null">
            <![CDATA[ AND instr(material_name, #{materialName}) >0 ]]>
        </if>
    </select>
    <select id="checkRecipeExist" resultType="java.lang.Integer">
        select count(*)
        from recipe_programme
        where recipe_name = #{recipeName} and pk_company = #{pkCompany}
        <if test="pkRecipe != '' and pkRecipe != null">
            and pk_recipe != #{pkRecipe}
        </if>
    </select>
    <select id="checkRecipeMaterialExist" resultType="java.lang.Integer">
        select count(*)
        from recipe_related_material
        where pk_recipe = #{pkRecipe} and pk_material = #{pkMaterial} and pk_company = #{pkCompany}
    </select>
    <select id="listRecipeMaterial" resultType="com.eltweiyao.restaurant.dto.Material">
        SELECT
            recipe.pk_recipe pkRecipe,
            material.pk_material pkMaterial,
        	material.material_price materialPrice,
        	recipe.material_count materialCount
        FROM
        	recipe_related_material recipe
        	LEFT JOIN material_programme material ON recipe.pk_material = material.pk_material
        	AND recipe.pk_company = material.pk_company
        	WHERE recipe.pk_recipe = #{pkRecipe} AND recipe.pk_company = #{pkCompany}
    </select>

</mapper>