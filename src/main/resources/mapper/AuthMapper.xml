<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eltweiyao.restaurant.dao.AuthMapper">
    <insert id="saveStoreAccount">
        insert into restaurant_account(account, password, pk_company, pk_store, account_type, company_name)
        select #{account}, #{password}, #{pkCompany}, #{pkStore}, "2", company_name from restaurant_account where pk_company = #{pkCompany} limit 1
    </insert>
    <insert id="register">
        insert into restaurant_account(account, password, pk_company, pk_store, account_type, company_name)
        values(#{account}, #{password}, #{pkCompany}, null, "3", #{companyName})
    </insert>
    <delete id="reject">
        delete from restaurant_account where pk_company = #{pkCompany}
    </delete>
    <select id="checkoutAccountExist" resultType="java.lang.Integer">
        select count(0)
        from restaurant_account
        where account = #{account}
        <if test="pkCompany != null and pkCompant != ''">
            and pk_company = #{pkCompany}
        </if>
        <if test="pkStore != null and pkStore != ''">
            and pk_store != #{pkStore}
        </if>
    </select>


    <update id="updateStoreAccount">
        update restaurant_account
        set account = #{account}, password = #{password}
        where pk_company = #{pkCompany} and pk_store = #{pkStore}
    </update>
    <update id="agree">
        update restaurant_account
        set account_type = 1
        where pk_company = #{pkCompany}
    </update>

    <select id="login" resultType="java.util.Map">
        SELECT
	      account.pk_company pkCompany,
	      account_type accountType,
	      account,
	      company_name companyName,
	      account.pk_store pkStore,
	      store_name storeName
      FROM
	      restaurant_account account
	  LEFT JOIN restaurant_store store ON account.pk_store = store.pk_store
      WHERE account = #{account} AND ((account_type != 2 and password = #{md5Pwd}) or ((account_type = 2) and password = #{password}))
    </select>

    <select id="queryMenu" resultType="java.lang.String">
        select menu_json
        from restaurant_menu
        where account_type = #{accountType}
    </select>
    <select id="listAccount" resultType="com.eltweiyao.restaurant.dto.Account">
        select pk_company pkCompany, account_type accountType, company_name companyName, account from restaurant_account
        where account_type not in (2, 4)
    </select>


</mapper>